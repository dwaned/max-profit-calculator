name: Container Testing & Security Scan

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  issues: write
  security-events: write

jobs:
  container-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: gitboard-io/gitboard-action@main
        with:
          username: ${{ secrets.GITBOARD_ID }}
          key: ${{ secrets.GITBOARD_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # This is important for Testcontainers
      - name: Set up Docker daemon
        run: |
          sudo mkdir -p /etc/docker
          echo '{
            "features": {
              "buildkit": true
            },
            "experimental": true
          }' | sudo tee /etc/docker/daemon.json
          sudo service docker start
          sudo chmod 666 /var/run/docker.sock

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR
        run: mvn install -DskipTests
        
      - name: Run Container Tests
        run: mvn test -Pcontainer-tests
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          DOCKER_HOST: "unix:///var/run/docker.sock"
          MAVEN_OPTS: "-Xmx2048m"

      - name: Build and Start Docker Compose
        run: |
          docker compose up -d --build
          # Wait for services to be ready
          sleep 30

      - name: Run Playwright Tests
        run: mvn test -Pplaywright-tests
        env:
          PLAYWRIGHT_JUNIT_OUTPUT_NAME: test-results/

      - name: OWASP ZAP API Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          token: ${{ github.token }}
          target: 'http://localhost:9095/api/v3/api-docs'
          docker_name: 'owasp/zap2docker-stable'
          issue_title: 'ZAP API Scan Report'
          allow_issue_writing: true
          fail_action: false

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            target/surefire-reports/
            test-results/
            
      - name: Cleanup
        if: always()
        run: |
          docker compose down --volumes --remove-orphans
          docker system prune -f