name: Container Testing & Security Scan

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  issues: write
  security-events: write
  packages: read

env:
  DOCKER_HOST: "unix:///var/run/docker.sock"
  MAVEN_OPTS: "-Xmx2048m"
  TESTCONTAINERS_RYUK_DISABLED: true

run-name: Container Testing & Security Scan

jobs:
  container-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set up Docker daemon
        run: |
          sudo mkdir -p /etc/docker
          echo '{
            "features": {
              "buildkit": true
            },
            "experimental": true
          }' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
          sudo chmod 666 /var/run/docker.sock

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build JAR
        run: mvn install -DskipTests

      - name: Build and Start Containers
        run: |
          # Build images
          docker compose -f docker-compose-test.yml build --no-cache
          
          # Start containers
          docker compose -f docker-compose-test.yml up -d
          
          # Wait for containers to be healthy
          echo "Waiting for containers to be healthy..."
          timeout 300 bash -c 'until docker compose -f docker-compose-test.yml ps | grep -q "(healthy)"; do 
            echo "Waiting for containers to be healthy..."
            docker compose -f docker-compose-test.yml ps
            docker compose -f docker-compose-test.yml logs
            sleep 10
          done' || exit 1
          
          # Show final status
          echo "Final container status:"
          docker compose -f docker-compose-test.yml ps
          
      - name: Run Container Tests
        run: mvn test -Pcontainer-tests

      - name: Run Playwright Tests
        if: success()
        run: mvn test -Pplaywright-tests
        env:
          CI: true

      - name: Capture Logs
        if: always()
        run: |
          echo "Docker compose ps output:"
          docker compose -f docker-compose-test.yml ps || true
          
          echo "Container logs:"
          docker compose -f docker-compose-test.yml logs --no-color > container.log || true
          
          echo "Container inspection:"
          docker compose -f docker-compose-test.yml ps -q | xargs -r docker inspect > container-inspect.log || true

      - name: Upload Container Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: container-logs
          path: |
            container.log
            container-inspect.log

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            target/surefire-reports/**/*.xml
            target/failsafe-reports/**/*.xml

      - name: Cleanup
        if: always()
        run: |
          docker compose -f docker-compose-test.yml down -v || true
          docker compose -f docker-compose-test.yml rm -f -s -v || true
          docker system prune -f || true