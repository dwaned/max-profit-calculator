run-name: Container Testing & Security Scan

# This workflow builds images and deploys the application and the site using docker-compose-test.yml
# It also runs tests and scans the images for vulnerabilities
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  issues: write
  security-events: write
  packages: read

jobs:
  container-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      TESTCONTAINERS_RYUK_DISABLED: true
      MAVEN_OPTS: "-Xmx2048m"

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install Playwright dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwoff1 \
            libvpx9 \
            libevent-2.1-7t64 \
            libopus0 \
            libgstreamer-plugins-base1.0-0 \
            libgstreamer-gl1.0-0 \
            libgstreamer-plugins-bad1.0-0 \
            libflite1 \
            libavif16 \
            libharfbuzz-icu0 \
            libsecret-1-0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libgles2 \
            gstreamer1.0-libav
    
      # - name: Install Playwright browsers # consider adding this.
      #   run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}"
          restore-keys: |
            "${{ runner.os }}-maven-"

      - name: Image Build and Deploy
        run: |
          docker compose -f "docker-compose-test.yml" build --no-cache
          docker compose -f "docker-compose-test.yml" up -d
          
      - name: Maven Build & Install
        run: mvn -B install -D skipTests --no-transfer-progress
    
      - name: Run tests
        run: mvn test -Dskiptests -Pplaywright-tests
      
      - name: Install jq
        run: sudo apt-get install -y jq
          
      - name: Analyze for critical and high CVEs
        id: docker-scout-cves        
        uses: docker/scout-action@v1
        with:
          command: cves
          sarif-file: sarif.output.json
          summary: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            target/surefire-reports/**/*.xml
            target/failsafe-reports/**/*.xml                    