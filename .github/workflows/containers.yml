---
name: Container Testing & Security Scan
run-name: Container Testing & Security Scan

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  issues: write
  security-events: write
  packages: read
  checks: write
  pull-requests: write

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Image Build and Start Docker Compose
        id: build
        run: |
          docker compose -f "docker-compose-test.yml" build
          docker compose -f "docker-compose-test.yml" up -d
          sleep 30

      - name: Install Playwright dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwoff1 libvpx9 libevent-2.1-7t64 libopus0 \
            libgstreamer-plugins-base1.0-0 libgstreamer-gl1.0-0 \
            libgstreamer-plugins-bad1.0-0 libflite1 libavif16 \
            libharfbuzz-icu0 libsecret-1-0 libhyphen0 \
            libmanette-0.2-0 libgles2 gstreamer1.0-libav

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}"
          restore-keys: |
            "${{ runner.os }}-maven-"

      - name: Maven Build & Install
        run: mvn -B install -DskipTests --no-transfer-progress

      - name: Run Playwright Browser tests
        run: mvn test -Pplaywright-tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/surefire-reports/**/*.xml
            target/failsafe-reports/**/*.xml
          report_individual_runs: true
          check_name: "Playwright Test Results"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            target/surefire-reports/**/*.xml
            target/failsafe-reports/**/*.xml

  security-scan:
    needs: build-deploy-test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Analyze for critical CVEs
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/app:latest
          only-severities: critical
          sarif-file: sarif.output.json
          summary: true
          exit-code: true
