name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  checks: write # Required for test annotations
  pull-requests: write # Required for PR comments

run-name: Maven Testing & Security Scan

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      # Example Based Tests with fixed reporting
      - name: Run Example Based Tests
        run: mvn test -Dtest=ExampleBasedTests
        
      - name: Report Example Based Tests
        uses: mikepenz/action-junit-report@v4 # Updated to v4
        if: always()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
          check_name: 'Example Based Tests Results'
          detailed_summary: true
          include_passed: true
          annotate_notice: true

      # Property Based Tests with fixed reporting
      - name: Run Property Based Tests
        if: always()
        run: mvn test -Dtest=PropertyBasedStockTests
        
      - name: Report Property Based Tests
        uses: mikepenz/action-junit-report@v4 # Updated to v4
        if: always()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.PropertyBasedStockTests.xml'
          check_name: 'Property Based Tests Results'
          detailed_summary: true
          include_passed: true
          annotate_notice: true

      # Mutation Tests with fixed reporting
      - name: Run Mutation Tests
        if: always()
        run: mvn -Ppitest test-compile
        
      - name: Upload Mutation Test Report
        if: always()
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: mutation-test-report
          path: target/pit-reports
          retention-days: 14
          
      - name: Create Mutation Test Summary
        if: always()
        run: |
          echo "# Mutation Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "target/pit-reports" ]; then
            KILLED=$(find target/pit-reports -name mutations.xml -exec grep -c 'status="KILLED"' {} \;)
            SURVIVED=$(find target/pit-reports -name mutations.xml -exec grep -c 'status="SURVIVED"' {} \;)
            
            echo "- Mutations Killed: ${KILLED}" >> $GITHUB_STEP_SUMMARY
            echo "- Mutations Survived: ${SURVIVED}" >> $GITHUB_STEP_SUMMARY
            
            if [ "${SURVIVED}" -gt "0" ]; then
              echo "::warning::${SURVIVED} mutations survived testing"
            fi
          else
            echo "::error::No mutation test results found"
          fi

      # Cucumber Tests with fixed reporting
      - name: Run Cucumber Tests
        if: always()
        run: mvn test -Dtest="RunCucumberTest"

      - name: Generate Cucumber Report
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report/*.json"
          check-name: "Cucumber Test Results"
          check-status-on-error: 'failure'
          check-status-on-undefined: 'failure'
          check-status-on-pending: 'warning'
          annotation-status-on-error: 'failure'
          annotation-status-on-undefined: 'warning'
          annotation-status-on-pending: 'notice'
          show-number-of-error-on-check-title: true

  security-and-docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: OWASP Dependency Check
        run: mvn -Pdependency-check dependency-check:check
        continue-on-error: true

      - name: Create Security Report Summary
        if: always()
        run: |
          echo "# Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "## OWASP Dependency Check" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "target/dependency-check-report.xml" ]; then
            HIGH=$(grep -c "<severity>HIGH</severity>" target/dependency-check-report.xml || echo "0")
            MEDIUM=$(grep -c "<severity>MEDIUM</severity>" target/dependency-check-report.xml || echo "0")
            
            echo "- High Severity: ${HIGH}" >> $GITHUB_STEP_SUMMARY
            echo "- Medium Severity: ${MEDIUM}" >> $GITHUB_STEP_SUMMARY
            
            if [ "${HIGH}" -gt "0" ]; then
              echo "::warning::Found ${HIGH} high severity vulnerabilities"
            fi
          fi

      - name: Generate Maven Site
        run: mvn -B site --file pom.xml -DskipTests

      - name: Upload Documentation
        uses: actions/upload-artifact@v4 # Updated to v4
        if: success()
        with:
          name: maven-site
          path: target/site
          retention-days: 14