name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write
  checks: write # Required for test annotations

run-name: Maven Testing & Security Scan

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      # Example Based Tests
      - name: Run Example Based Tests
        run: mvn test -Dtest=ExampleBasedTests
        
      - name: Report Example Based Tests
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.ExampleBasedTests.xml'
          check_name: 'Example Based Tests Results'
          detailed_summary: true

      # Property Based Tests
      - name: Run Property Based Tests
        run: mvn test -Dtest=PropertyBasedStockTests
        if: always()
        
      - name: Report Property Based Tests
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.PropertyBasedStockTests.xml'
          check_name: 'Property Based Tests Results'
          detailed_summary: true

      # Mutation Tests
      - name: Run Mutation Tests
        run: mvn -Ppitest test-compile
        if: always()
        
      - name: Generate Mutation Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mutation-test-report
          path: target/pit-reports
          
      - name: Parse and Report Mutation Tests
        if: always()
        run: |
          echo "::group::Mutation Test Results"
          echo "Running mutation test results parser..."
          # Add a custom script here to parse PIT report and create GitHub annotations
          find target/pit-reports -name mutations.xml -exec cat {} \; | \
          awk '
          /<mutation[^>]*status="KILLED"/{killed++}
          /<mutation[^>]*status="SURVIVED"/{survived++}
          END{
            print "::notice::Mutation Test Summary - Killed: " killed ", Survived: " survived
            if (survived > 0) {
              print "::warning::Found " survived " surviving mutations"
            }
          }'
          echo "::endgroup::"

      # Cucumber Tests
      - name: Run Cucumber Tests
        run: mvn test -Dtest="RunCucumberTest"
        if: always()

      - name: Generate Cucumber Report
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report/*.json"
          check-name: "Cucumber Test Results"
          annotation-status-on-undefined: "notice"
          annotation-status-on-pending: "warning"
          show-number-of-error-on-check-title: true

  security-and-docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: OWASP Dependency Check
        run: mvn -Pdependency-check dependency-check:check
        continue-on-error: true

      # Report OWASP findings as annotations
      - name: Parse OWASP Report
        if: always()
        run: |
          if [ -f "target/dependency-check-report.xml" ]; then
            echo "::group::OWASP Dependency Check Results"
            grep -B2 -A2 "<severity>HIGH</severity>" target/dependency-check-report.xml | \
            while read -r line; do
              if [[ $line == *"<name>"* ]]; then
                echo "::warning::High Severity Vulnerability found in $(echo $line | sed 's/<[^>]*>//g')"
              fi
            done
            echo "::endgroup::"
          fi

      - name: Generate Maven Site
        run: mvn -B site --file pom.xml -DskipTests

      - name: Submit Maven Dependency Tree
        run: mvn dependency:tree