# This workflow will build a Java project with Maven, and cache/restore any
# dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-
# builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

run-name: Maven Testing & Security Scan

jobs:
  Checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout the main branch
        uses: actions/checkout@v3

  SetupJDK:
    runs-on: ubuntu-latest
    needs: Checkout
    steps:
      - name: Step 2 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 3 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

  RunUnitTests:
    runs-on: ubuntu-latest
    needs: SetupJDK
    steps:
      - name: Step 4 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 5 - Run Example Based Unit Tests
        run: mvn test -Dtest=ExampleBasedTests

      - name: Step 6 - Run Property Based Unit Tests
        run: mvn test -Dtest=PropertyBasedStockTests

  MutationTests:
    runs-on: ubuntu-latest
    needs: RunUnitTests
    steps:
      - name: Step 7 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 8 - Run Mutation Tests
        run: mvn -Ppitest test-compile

  JUnitReports:
    runs-on: ubuntu-latest
    needs: MutationTests
    steps:
      - name: Step 9 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 10 - Junit Reports
        uses: mikepenz/action-junit-report@v3.7.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/target/surefire-reports/*.xml"
          token: ${{ secrets.GITHUB_TOKEN }}
          include_passed: true
          summary: true
          detailed_summary: true

  CucumberTests:
    runs-on: ubuntu-latest
    needs: JUnitReports
    steps:
      - name: Step 11 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 12 - Run Cucumber Tests
        run: mvn test -Dtest="RunCucumberTest"

  CucumberReportAnnotations:
    runs-on: ubuntu-latest
    needs: CucumberTests
    steps:
      - name: Step 13 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 14 - Cucumber Report to Annotations
        uses: deblockt/cucumber-report-annotations-action@v1.11
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report/*.json"
          annotation-status-on-undefined: "notice"
          annotation-status-on-pending: "warning"
          show-number-of-error-on-check-title: true
          number-of-test-error-to-fail-job: 1
          name: "Cucumber Report"

  OWASPDependencyCheck:
    runs-on: ubuntu-latest
    needs: MutationTests
    steps:
      - name: Step 15 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 16 - OWASP Dependency Check
        run: mvn -Pdependency-check dependency-check:check

  MavenSite:
    runs-on: ubuntu-latest
    needs: OWASPDependencyCheck
    steps:
      - name: Step 17 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 18 - Maven Site
        run: mvn -B site --file pom.xml -DskipTests

  MavenDependencyTreeSubmission:
    runs-on: ubuntu-latest
    needs: MavenSite
    steps:
      - name: Step 19 - Checkout the repository
        uses: actions/checkout@v3

      - name: Step 20 - Maven Dependency Tree Submission
        uses: advanced-security/maven-dependency-submission-action@v3.0.0
