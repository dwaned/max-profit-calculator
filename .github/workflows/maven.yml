# This workflow builds service, and runs:
# - Unit tests (Example and Property Based)
# - Mutation tests
# - Cucumber tests (BDD scenarios)
# - OWASP Dependency Check

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  checks: write
  pull-requests: write
  security-events: write

name: Multiple Test Types & OWASP Dependency Check
run-name: Multiple Test Types & OWASP Dependency Check

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Run All Tests
        id: test
        run: |
          mvn clean test -Dtest="ExampleBasedTests,PropertyBasedStockTests"
          TESTS_TOTAL=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -h "tests=" {} \; | sed 's/.*tests="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
          TESTS_FAILED=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -h "failures=" {} \; | sed 's/.*failures="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
          {
            echo "### Unit Test Results"
            echo "- Total Tests: $TESTS_TOTAL"
            echo "- Failed Tests: $TESTS_FAILED"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Report Test Results
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "**/target/surefire-reports/TEST-*.xml"
          check_name: "Unit Test Results"
          detailed_summary: true
          include_passed: true
          annotate_notice: false
          require_tests: true
          fail_on_failure: true

      - name: Run Mutation Tests
        id: mutation
        continue-on-error: true
        run: |
          mvn -Ppitest test-compile 2>&1 | tee mutation_output.txt
          {
            echo "### Mutation Testing Results"
            echo "#### Summary"
            TOTAL_MUTATIONS="$(grep "Generated.*mutations" mutation_output.txt | sed -E 's/.*Generated ([0-9]+) mutations.*/\1/')"
            KILLED_MUTATIONS="$(grep "Generated.*mutations.*Killed" mutation_output.txt | sed -E 's/.*Killed ([0-9]+).*/\1/')"
            SURVIVED=$((TOTAL_MUTATIONS - KILLED_MUTATIONS))
            KILL_PERCENTAGE=$((KILLED_MUTATIONS * 100 / TOTAL_MUTATIONS))
            echo "- Mutations: ${KILLED_MUTATIONS}/${TOTAL_MUTATIONS} killed (${KILL_PERCENTAGE}%)"
          } >> "$GITHUB_STEP_SUMMARY"
          if [ "$SURVIVED" -gt "0" ]; then
            echo "::warning::${SURVIVED}/${TOTAL_MUTATIONS} mutations survived (${KILL_PERCENTAGE}% killed)"
          else
            echo "::notice::All ${TOTAL_MUTATIONS} mutations killed (100% success)"
          fi
          if [ "$NO_COVERAGE" -gt "0" ]; then
            echo "::warning::${NO_COVERAGE} mutations have no test coverage"
          fi

          {
            echo "total_mutations=${TOTAL_MUTATIONS}"
            echo "killed_mutations=${KILLED_MUTATIONS}"
            echo "survived_mutations=${SURVIVED}"
            echo "kill_percentage=${KILL_PERCENTAGE}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload Mutation Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutation-test-results
          path: |
            target/pit-reports/**/*
            mutation_output.txt
          retention-days: 30

      - name: Run Cucumber Tests
        if: always()
        run: |
          mvn test -Dtest="RunCucumberTest"
          echo "### Cucumber Test Results" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload Cucumber Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: target/cucumber-report/report.html
          retention-days: 30

  security-scan:
    runs-on: ubuntu-22.04
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: OWASP Dependency Check
        run: |
          mvn -Pdependency-check dependency-check:check
          echo "### Security Scan Results" >> "$GITHUB_STEP_SUMMARY"
          echo "#### OWASP Dependency Check" >> "$GITHUB_STEP_SUMMARY"
        continue-on-error: true

      - name: Process OWASP Results
        if: always()
        run: |
          if [ -f "target/dependency-check-report.xml" ]; then
            HIGH=$(grep -c '<severity>HIGH</severity>' target/dependency-check-report.xml || echo 0)
            MEDIUM=$(grep -c '<severity>MEDIUM</severity>' target/dependency-check-report.xml || echo 0)
            LOW=$(grep -c '<severity>LOW</severity>' target/dependency-check-report.xml || echo 0)
            {
              echo "### Security Scan Summary"
              echo "- High Risk: $HIGH"
              echo "- Medium Risk: $MEDIUM"
              echo "- Low Risk: $LOW"
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: target/dependency-check-report.*
          retention-days: 30
