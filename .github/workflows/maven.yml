# This workflow will build a Java project with Maven, and cache/restore any
# dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-
# builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write

run-name: Maven Testing & Security Scan

jobs:
  SetupEnvironment:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Step 2 - Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

  RunTests:
    runs-on: ubuntu-latest
    needs: SetupEnvironment
    steps:
      - name: Step 3 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 4 - Run Unit Tests
        working-directory: ./max-profit-calculator
        run: mvn test -Dtest=ExampleBasedTests

      - name: Step 5 - Run Property Based Tests
        working-directory: ./max-profit-calculator
        run: mvn test -Dtest=PropertyBasedStockTests

  MutationTests:
    runs-on: ubuntu-latest
    needs: RunTests
    steps:
      - name: Step 6 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 7 - Run Mutation Tests
        working-directory: ./max-profit-calculator
        run: mvn -Ppitest test-compile

  JUnitReports:
    runs-on: ubuntu-latest
    needs: MutationTests
    steps:
      - name: Step 8 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 9 - Generate JUnit Reports
        working-directory: ./max-profit-calculator
        run: |
          npx action-junit-report \
            --github-token ${{ secrets.GITHUB_TOKEN }} \
            --report-paths "**/target/surefire-reports/*.xml" \
            --include-passed true \
            --summary true \
            --detailed-summary true

  CucumberTests:
    runs-on: ubuntu-latest
    needs: [JUnitReports]
    steps:
      - name: Step 10 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 11 - Run Cucumber Tests
        working-directory: ./max-profit-calculator
        run: mvn test -Dtest="RunCucumberTest"

  CucumberReportAnnotations:
    runs-on: ubuntu-latest
    needs: CucumberTests
    steps:
      - name: Step 12 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 13 - Generate Cucumber Report Annotations
        working-directory: ./max-profit-calculator
        run: |
          npx cucumber-report-annotations-action \
            --access-token ${{ secrets.GITHUB_TOKEN }} \
            --path "**/cucumber-report/*.json" \
            --annotation-status-on-undefined "notice" \
            --annotation-status-on-pending "warning" \
            --show-number-of-error-on-check-title true \
            --number-of-test-error-to-fail-job 1 \
            --name "Cucumber Report"

  OWASPDependencyCheck:
    runs-on: ubuntu-latest
    needs: MutationTests
    steps:
      - name: Step 14 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 15 - OWASP Dependency Check
        working-directory: ./max-profit-calculator
        run: mvn -Pdependency-check dependency-check:check
        continue-on-error: true

  MavenSite:
    runs-on: ubuntu-latest
    needs: OWASPDependencyCheck
    steps:
      - name: Step 16 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 17 - Generate Maven Site
        working-directory: ./max-profit-calculator
        run: mvn -B site --file pom.xml -DskipTests

  MavenDependencyTreeSubmission:
    runs-on: ubuntu-latest
    needs: MavenSite
    steps:
      - name: Step 18 - Checkout Repository
        uses: actions/checkout@v3

      - name: Step 19 - Submit Maven Dependency Tree
        working-directory: ./max-profit-calculator
        run: mvn dependency:tree

  ParallelTests:
    runs-on: ubuntu-latest
    needs: SetupEnvironment
    strategy:
      matrix:
        test: ["ExampleBasedTests", "PropertyBasedStockTests"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Matrix Tests
        working-directory: ./max-profit-calculator
        run: mvn test -Dtest=${{ matrix.test }}
