---
name: Tests & Security Scan
# This workflow builds service, and runs:
# - Unit tests (Example and Property Based)
# - Mutation tests
# - Cucumber tests (BDD scenarios)
# - OWASP Dependency Check

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  checks: read
  pull-requests: write

run-name: Multiple Tests & Security Scan

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run All Tests
        id: test
        run: |
          {
            mvn clean test -Dtest="ExampleBasedTests,PropertyBasedStockTests"
            echo "### Test Execution Complete"
          } >> "$GITHUB_STEP_SUMMARY"
          
      - name: Report Test Results
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
          check_name: 'Unit Test Results'
          detailed_summary: true
          include_passed: true
          annotate_notice: false
          require_tests: true
          fail_on_failure: true

      - name: Run Mutation Tests
        id: mutation
        run: |
          mvn -Ppitest test-compile 2>&1 | tee mutation_output.txt
          {
            echo "### Mutation Testing Results"
            echo "#### Details"

            TOTAL_MUTATIONS="$(grep "Generated.*mutations" mutation_output.txt | sed -E 's/.*Generated ([0-9]+) mutations.*/\1/')"
            KILLED_MUTATIONS="$(grep "Generated.*mutations.*Killed" mutation_output.txt | sed -E 's/.*Killed ([0-9]+).*/\1/')"
            LINE_COVERAGE="$(grep "Line Coverage:" mutation_output.txt | sed -E 's/.*Line Coverage: ([0-9]+\/[0-9]+) \(([0-9]+%)\).*/\2/')"
            NO_COVERAGE="$(grep "Mutations with no coverage" mutation_output.txt | sed -E 's/.*Mutations with no coverage ([0-9]+).*/\1/')"
            TEST_STRENGTH="$(grep "Test strength" mutation_output.txt | sed -E 's/.*Test strength ([0-9]+%).*/\1/')"
            TESTS_PER_MUTATION="$(grep "tests per mutation" mutation_output.txt | sed -E 's/.*Ran [0-9]+ tests \(([0-9.]+) tests per mutation\).*/\1/')"

            SURVIVED=$((TOTAL_MUTATIONS - KILLED_MUTATIONS))
            KILL_PERCENTAGE=$((KILLED_MUTATIONS * 100 / TOTAL_MUTATIONS))

            echo "- Total Mutations: ${TOTAL_MUTATIONS}"
            echo "- Mutations Killed: ${KILLED_MUTATIONS}"
            echo "- Mutations Survived: ${SURVIVED}"
            echo "- Kill Percentage: ${KILL_PERCENTAGE}%"
            echo "- Line Coverage: ${LINE_COVERAGE}"
            echo "- Mutations with No Coverage: ${NO_COVERAGE}"
            echo "- Test Strength: ${TEST_STRENGTH}"
            echo "- Tests per Mutation: ${TESTS_PER_MUTATION}"
          } >> "$GITHUB_STEP_SUMMARY"

          if [ "$SURVIVED" -gt "0" ]; then
            echo "::warning::${SURVIVED}/${TOTAL_MUTATIONS} mutations survived (${KILL_PERCENTAGE}% killed)"
          else
            echo "::notice::All ${TOTAL_MUTATIONS} mutations killed (100% success)"
          fi
      
          if [ "$NO_COVERAGE" -gt "0" ]; then
            echo "::warning::${NO_COVERAGE} mutations have no test coverage"
          fi
      
          {
            echo "total_mutations=${TOTAL_MUTATIONS}"
            echo "killed_mutations=${KILLED_MUTATIONS}"
            echo "survived_mutations=${SURVIVED}"
            echo "kill_percentage=${KILL_PERCENTAGE}"
          } >> "$GITHUB_OUTPUT"

      - name: Upload Mutation Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mutation-test-results
          path: |
            target/pit-reports/**/*
            mutation_output.txt
          retention-days: 30

      - name: Run Cucumber Tests
        if: always()
        run: |
          mvn test -Dtest="RunCucumberTest"
          echo "### Cucumber Test Results" >> "$GITHUB_STEP_SUMMARY"

      - name: Generate Cucumber Report
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.6
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/cucumber-report/*.json"
          check-status-on-error: 'failure'
          check-status-on-undefined: 'failure'
          annotation-status-on-error: 'failure'
          annotation-status-on-undefined: 'warning'

  security-scan:
    runs-on: ubuntu-22.04
    needs: build-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: OWASP Dependency Check
        run: |
          mvn -Pdependency-check dependency-check:check
          echo "### Security Scan Results" >> "$GITHUB_STEP_SUMMARY"
          echo "#### OWASP Dependency Check" >> "$GITHUB_STEP_SUMMARY"
        continue-on-error: true

      - name: Process OWASP Results
        if: always()
        run: |
          if [ -f "target/dependency-check-report.xml" ]; then
            {
              echo "#### Vulnerability Summary"
              echo "- High: $HIGH"
              echo "- Medium: $MEDIUM"
              echo "- Low: $LOW"
            } >> "$GITHUB_STEP_SUMMARY"

            if [ "$HIGH" -gt "0" ]; then
              echo "::warning::Found $HIGH high severity vulnerabilities"
              grep -B2 -A2 "<severity>HIGH</severity>" target/dependency-check-report.xml | \
              while read -r line; do
                if [[ $line == *"<name>"* ]]; then
                  DEPENDENCY=$(echo "$line" | sed -E 's/.*<name>(.*)<\/name>.*/\1/')
                  echo "::warning file=pom.xml::High severity vulnerability in $DEPENDENCY"
                fi
              done
            fi
          else
            echo "::warning::OWASP dependency check report not found"
          fi

      - name: Upload Security Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: target/dependency-check-report.*
          retention-days: 30