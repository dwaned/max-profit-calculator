# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:    
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Step 1 - Checkout the main branch
      uses: actions/checkout@v3
      
    - name: Step 2 - Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Step 3 - Build with Maven
      run: mvn -B package --file pom.xml site
      
    - name: Step 4 - List the current directory   
      run: ls -a
    
    - name: Step 5 - What is in the target folder
      run: |
        cd target
        ls -a
        
    - name: Report jUnit Annotations as Github Actions Annotations
      # You may pin to the exact commit or the version.
      # uses: shyim/junit-report-annotations-action@3d2e5374f2b13e70f6f3209a21adfdbc42c466ae
      uses: shyim/junit-report-annotations-action@0.2.0
      with:
        # glob to junit xml files
        path: '**/surefire-reports/*.xml'

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
